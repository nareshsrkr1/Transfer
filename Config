import subprocess

def get_top_directories(path, num_top_directories=10):
    try:
        # Execute the du -h command to get directory sizes
        du_output = subprocess.check_output(['du', '-h', path]).decode('utf-8')
        # Execute the sort -rh command to sort the output in reverse human-readable format
        sort_output = subprocess.check_output(['sort', '-rh'], input=du_output.encode('utf-8')).decode('utf-8')
        # Execute the head -n command to get the top N directories
        head_output = subprocess.check_output(['head', '-n', str(num_top_directories)], input=sort_output.encode('utf-8')).decode('utf-8')
        # Parse the output to extract directory sizes and names
        top_directories = []
        for line in head_output.split('\n'):
            if line:
                size_str, dir_name = line.split('\t')
                size = size_str.strip()  # Remove leading/trailing whitespace
                top_directories.append((size, dir_name))
        return top_directories
    except subprocess.CalledProcessError as e:
        print(f"Error retrieving top directories for path {path}: {e}")
        return []

# Example usage
path = '/path/to/directory'
top_directories = get_top_directories(path)
print("Top 10 directories with maximum occupancy:")
for size, dir_name in top_directories:
    print(f"Size: {size}, Directory: {dir_name}")
