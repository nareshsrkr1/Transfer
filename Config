WITH Saccr_Leg_Sum AS (
    SELECT 
        LEFT(legTransactionId, CHARINDEX('.', legTransactionId) - 1) AS Base_TransactionId,
        SUM(stdAllocatedRwa) AS TotalLegRwa
    FROM saccr_rwa_ead_data
    WHERE CHARINDEX('.', legTransactionId) > 0  -- Only consider split IDs
    GROUP BY LEFT(legTransactionId, CHARINDEX('.', legTransactionId) - 1)
)
UPDATE unfd_positions_dt
SET 
    CCR_RWA = COALESCE(
        COALESCE(saccr_leg.stdAllocatedRwa, saccr_trans.stdAllocatedRwa, saccr_leg_agg.TotalLegRwa), 
        unfd.CCR_RWA
    ),
    RWA_SACCR_FLAG = CASE 
        WHEN saccr_leg.stdAllocatedRwa IS NOT NULL 
             OR saccr_trans.stdAllocatedRwa IS NOT NULL 
             OR saccr_leg_agg.TotalLegRwa IS NOT NULL
        THEN 'Y' 
        ELSE 'N' 
    END
FROM 
    unfd_positions_dt unfd
    LEFT JOIN saccr_rwa_ead_data saccr_leg
        ON unfd.Transaction_ID_FACS = saccr_leg.legTransactionId
    LEFT JOIN saccr_rwa_ead_data saccr_trans
        ON unfd.Transaction_ID_FACS = saccr_trans.transactionId
    LEFT JOIN Saccr_Leg_Sum saccr_leg_agg
        ON unfd.Transaction_ID_FACS = saccr_leg_agg.Base_TransactionId;
