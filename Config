#!/bin/bash

# Read configuration from config.ini
source_dir=$(awk -F '= ' '/\[input_files\]/{f=1; next} /\[.*\]/{f=0} f&&NF&&/source_dir/{print $NF}' config.ini)
destination_dir=$(awk -F '= ' '/\[input_files\]/{f=1; next} /\[.*\]/{f=0} f&&NF&&/destination_dir/{print $NF}' config.ini)
input_files=$(awk -F '= ' '/\[input_files\]/{f=1; next} /\[.*\]/{f=0} f&&NF&&/files/{print $NF}' config.ini)

# Ensure the destination directory exists
mkdir -p "$destination_dir"

# Get the current date and time
current_datetime=$(date +"%Y%m%d%H%M%S")

# Function to process files based on the input pattern
process_files() {
    local input_files_section=$1

    # Read input files patterns from the specified section in config.ini
    input_files=$(awk -F '= ' -v section="$input_files_section" '/\['section'\]/{f=1; next} /\[.*\]/{f=0} f&&NF&&/files/{print $NF}' config.ini)

    # Construct the source directory path including the environment variable
    source_dir="$source_env_var$path/to/source/directory"

    # Initialize an array to store matching files
    declare -a matching_files_array

    # Loop through each input file pattern
    IFS=', ' read -ra input_files_array <<< "$input_files"
    for input_file_pattern in "${input_files_array[@]}"; do
        # Find files matching the current pattern in the specified source directory
        matching_files=$(find "$source_dir" -maxdepth 1 -type f -name "$input_file_pattern" -print)
        matching_files_array+=($matching_files)
    done

    # Check if there are any matching files
    if [ ${#matching_files_array[@]} -gt 0 ]; then
        # Tar all matching files into one archive with date and time appended
        tar -czf "$destination_dir/${input_files_section}_files_${current_datetime}.tar.gz" "${matching_files_array[@]}"
        echo "Processing for $input_files_section complete."
    else
        echo "No matching files found in '$source_dir' for the patterns: '$input_files'"
    fi
}

# Check if argument is provided
if [ $# -eq 1 ]; then
    # Process files based on the argument provided
    process_files "$1"
else
    echo "Usage: $0 {tpdfiles|marsfiles}"
fi
